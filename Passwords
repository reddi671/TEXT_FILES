############ Password for GIT#############:
-----------------
mqVU5rXfTdBsqxwPCKxp


i-0503cb7037f1c641b

    java.end.point=https://magento.beatxp.com/javaapi
combo.sku=GMACOMBO-070
sku.list=8906171640439,880023230505



combo.sku=GMACOMBO-070
sku.list=8906171640439,880023230505
website.url=https://www.beatxp.com

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

Hitm@n@2767

4904206785


{
    "email":"odeti.pavan@beatxp.com",
    "password":"123",
    "checkGoogle":false
}


ATBBcGN3EYVB2G5NQ9r9k624dXrKE94B452E

CLICK POST KEY : d35bd94c-1c69-43e4-9138-301f2e1e3126

ALTER TABLE `medical_devices`.`orders` 
DROP FOREIGN KEY `FKa8f11p9aq4tob7o3oedkjw2e3`,
DROP FOREIGN KEY `FK9p8qbaskm9y0b393f2vwtpykx`;
ALTER TABLE `medical_devices`.`orders` 
DROP COLUMN `shipping_address_order_id`,
DROP COLUMN `shipping_address_id`,
DROP INDEX `FK9p8qbaskm9y0b393f2vwtpykx`,
DROP INDEX `FKa8f11p9aq4tob7o3oedkjw2e3`;

ALTER TABLE `smartwatch_assistance` CHANGE `updated_at` 
`updated_at` DATETIME on update CURRENT_TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP;



#### prod ########
------------------
aws ssm start-session --target i-0e5cff3f208e7276e --document-name AWS-StartPortForwardingSessionToRemoteHost --parameters '{"host": ["magento-backup.cx0xeyhklgcd.ap-south-1.rds.amazonaws.com"],"portNumber":["3306"], "localPortNumber":["1234"]}' --profile beatxp

username=beatxp
password=AL1oZOjWCoN0


##### DEV #######
--------------------
aws ssm start-session --target i-0e5cff3f208e7276e --document-name AWS-StartPortForwardingSessionToRemoteHost --parameters '{"host": ["beatxp-staging.cx0xeyhklgcd.ap-south-1.rds.amazonaws.com"],"portNumber":["3306"], "localPortNumber":["1235"]}' --profile beatxp

username=admin
password=welcome12345


########## MAGENTO #########
------------------------------
magento.path = https://magento.beatxp.com/index.php/
magento.username=user1
magento.password=Gama@12345

service.order.url.no.media=https://magento.beatxp.com/javaapi/javaorder/api/templates/sendWhatsappMessageNoMedia

############JAVA DEPLOYMENT ###########
[Unit]
Description=beatxp java service
After=syslog.target
After=network.target[Service]
User=ubuntu
Type=simple

[Service]
ExecStart=/usr/bin/java -jar /home/ubuntu/bxp-micro-services/console-beatxp/target/console-0.0.1-SNAPSHOT.jar

KillMode=control-group
Restart=always
StandardOutput=/var/log/SpringLogs/springapplication.log
StandardError=/var/log/SpringLogs/springerror.log
SyslogIdentifier=backendspring
LimitNOFILE=100000

[Install]
WantedBy=multi-user.target

############ GOOGLE PROJECT ############:
----------------
projectName : beatXP,
Id :  beatxp-399305 



mysql -u admin -pwelcome12345 -h beatxp-staging.cx0xeyhklgcd.ap-south-1.rds.amazonaws.com
mysqldump -h magento-backup.cx0xeyhklgcd.ap-south-1.rds.amazonaws.com -u beatxp -p bitnami_magento custom_pincode > /tmp/custom_pincode.sql
mysql -h beatxp-staging.cx0xeyhklgcd.ap-south-1.rds.amazonaws.com -u admin -p bitnami_magento < prod.sql
mysqldump -h magento-backup.cx0xeyhklgcd.ap-south-1.rds.amazonaws.com -u beatxp -p bitnami_magento --set-gtid-purged=OFF > prod.sql
mysqldump -h magento-backup.cx0xeyhklgcd.ap-south-1.rds.amazonaws.com -u beatxp -p bitnami_magento  > prod.sql


    spring.datasource.url=jdbc:mysql://beatxp-staging.cx0xeyhklgcd.ap-south-1.rds.amazonaws.com/bitnami_magento
spring.datasource.username=admin
spring.datasource.password=welcome12345



UPDATE_INVENTORY_URL : Not required,
ACK_ORDERS_URL: https :https://magento.beatxp.com/javaapi/javaexternal/api/warehouse/orderAcknowledgement,
CREATE_SHIPMENT_URL : https://magento.beatxp.com/javaapi/javaexternal/api/warehouse/pushReplacementNotificationWebhook
HANDOVER_URL: https :https://magento.beatxp.com/javaapi/javaexternal/api/warehouse/orderHandOver
CONSOLIDATED_UPDATE_INVENTORY_URL: Not required,
RMS_NOTIFICATION_URL : https://magento.beatxp.com/javaapi/javaexternal/api/warehouse/orderPackReplacement

https://magento.beatxp.com/javaapi/javaexternal/api/warehouse/pushNotificationWebhook

sudo php bin/magento module:disable 

{Magento_Elasticsearch,Magento_InventoryElasticsearch,Magento_Elasticsearch6,Magento_Elasticsearch7}

ngrok config add-authtoken 2SSOxalZZdsET1M6ynjSxTHXNbM_46WMKHvF4wTCK1UqCxNCc


db.abandon_cart.updateMany({"status":{$exists:false}}, {$set:{"status":2}});


########### Staging  ###########
      aws sso login --profile beatxp_staging
      *****MAGENTO******
      aws ssm start-session --target i-047f6a0ba641cf31c --profile beatxp_staging
      ***** JAVA *********
      aws ssm start-session --target i-0d726436102cdb9e0 --profile beatxp_staging

########## javaService dev ########## 
    tail -f /var/log/SpringLogs/springapplication.log
    sudo git pull
    cd console-beatxp/
    sudo mvn clean package
    sudo systemctl restart beatxp-java.service

#######Magento-CREDENTIALS#######
    Local Magento2: pa.magento.com/admin
    ----------------
    u:  pavan
    P:  beatxp@23

    DEV-ENV: 
    -------
    https://magento-test.beatxp.com/index.php/admin/admin/
    u: pavan.reddi 
    p:  Pavan@beatxp23

    prod:
    -----
    https://magento.beatxp.com/index.php/admin/admin/
    u: pavan.odeti
    p: Pavan@beatxp23



********coupon Generation*********
sudo bin/magento-cli queue:consumers:list
sudo bin/magento-cli cron:run
sudo bin/magento-cli queue:consumers:start codegeneratorProcessor

########## USER CREATION########

pristyncare@LT-ASUS-405:/var/www/html/magento2$ sudo php bin/magento admin:user:create

Admin user: odeti
Admin password: --------
Admin email: reddi671@gmail.com
Admin first name: odeti
Admin last name: odeti


sudo nano /etc/profilesudo 
sudo update-alternatives --config java
mvn clean -Ppurge
export JAVA_HOME="$(jrunscript -e 'java.lang.System.out.println(java.lang.System.getProperty("java.home"));')"
mvn spring-boot:run
mvn clean package
java -jar <jarfilename>.jar


https://docs.google.com/document/d/1q3SHy8XUkERZ4i_m8kIXJUFmZUaNM1qB8TSlK6C9LE8/edit
https://docs.google.com/document/d/1DLiuD9x_lRefiMJmDMdiK4vZTbCssYBON56IlVxSirE/edit
https://docs.google.com/spreadsheets/d/1Q3TaOPo0bG5m5GU5r1C1FjMeGNz8geM8UCQ6AMN2-WE/edit#gid=0


https://developers.facebook.com/docs/whatsapp/cloud-api/get-started

https://business.facebook.com/wa/manage/message-templates/?business_id=1268008387084438&waba_id=114962174862449&global_scope_id=1268008387084438

https://adsmanager.facebook.com/adsmanager/manage/campaigns?nav_entry_point=lep_242&nav_source=unknown&act=737619504618536

https://developers.facebook.com/apps/753882466001188/dashboard/?business_id=1268008387084438


AWS CONFIGURATION:
-------------------
aws sso login --profile beatxp_staging

aws ssm start-session --target i-047f6a0ba641cf31c --profile beatxp_staging

aws s3 ls --profile beatxp_staging

aws configure sso --profile beatxp_staging
SSO session name (Recommended): dev_staging
SSO start URL [None]: https://pristyncare.awsapps.com/start
SSO region [None]: ap-south-1
SSO registration scopes [sso:account:access]: BeatXP-Staging-dev-access
Attempting to automatically open the SSO authorization page in your default browser.
If the browser does not open or you wish to use a different device to authorize this request, open the following URL:

https://device.sso.ap-south-1.amazonaws.com/

Then enter the code:

SHWD-MNHV
There are 2 AWS accounts available to you.
Using the account ID 249177850909
The only role available to you is: BeatXP-Staging-dev-access
Using the role name "BeatXP-Staging-dev-access"
CLI default client Region [None]: ap-south-1
CLI default output format [None]: json

To use this profile, specify the profile name using --profile, as shown:



root emial: reddi671@gmail.com    https://302465619981.signin.aws.amazon.com/console
AWS ac name: reddi671@gmail.com    pavanodeti
password: Ksroot@66    Reddeppa@1026



sudo php bin/magento setup:upgrade
sudo php bin/magento setup:di:compile
sudo php bin/magento setup:static-content:deploy -f
sudo php bin/magento cache:flush
sudo php bin/magento deploy:mode:set developer
sudo php bin/magento module:status
sudo php bin/magento module:enable Mageplaza_HelloWorld
sudo php bin/magento cache:clean
sudo rm -rf var/cache/*
sudo rm -rf var/generation/*
sudo rm -rf var/lib/php/sessions/sess_6uha84kjcvjmq6qjsh0ctee5ff
sudo rm -rf var/lib/php/sessions/sess_qestq4vm40255in9tiivhfk1ck



permission : sshd 400 Pharmastaging.pem
Connection command:  ssh -i PharmaStaging.pem bitnami@3.108.6.216

MySQL: 
u: root
p: AL1oZOjWCoN0










php bin/magento admin:user:create --admin-user=odeti --admin-password=Akhilapavan@13 --admin-email=admin@magento.tld --admin-firstname=admin --admin-lastname=admin



Created Magento administrator user named odeti


UPDATE admin_user SET `password` = SHA2('pavan@1234', 256) WHERE `username`='pavan';
UPDATE admin_user SET password = CONCAT(SHA2('[salt]pavan@1234', 256), ':[salt]:1') WHERE username = 'pavan';







                    Long finalOrderId = orderId;
                    CompletableFuture.runAsync(()->{
                        this.sendEmailToCustomer(finalOrderId,invoiceUrlFromS3 );
                    });

                      private void sendEmailToCustomer(Long finalOrderId, String invoiceUrlFromS3) {
        if(finalOrderId != null){
            List<Map<String, Object>> emailData =salesOrderRepository.getEmailOrderData(finalOrderId);
            if(!ObjectUtils.isEmpty(emailData)){
                Map<String, Object> map = emailData.get(0);
                String firstname = map.get("firstname").toString();
                String email = map.get("email").toString();
                String subject = "";
                String body ="";
                this.emialUsingrestTemplate(email, subject, body);
            }
        }
    }

    public  void emialUsingrestTemplate(String toEmail, String subject, String body){
        logger.info("--------- rest template called for vinu service-----");
        String url = "https://ldyq1edoh2.execute-api.ap-south-1.amazonaws.com/production/email";
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(org.springframework.http.MediaType.APPLICATION_JSON);
        headers.set("Accept","application/json");
        headers.set("x-api-key","6YSmAVhjh08DJvMxOcFOR1uFPGi7BzVU1Nr5kGWt");

        Map<String, Object> reqBody = new HashMap<>();
        reqBody.put("cc", new String[]{});
        reqBody.put("bcc",  new String[]{"sarasij.roy@pristyncare.com"});
        reqBody.put("attachments", new String[]{} );
        reqBody.put("subject", subject  );
        reqBody.put("body", body );
        reqBody.put("from", "no-reply@emails.beatxp.com");
        reqBody.put("email", toEmail );
        reqBody.put("contentType", "html");
        reqBody.put("fromName", "beatXP");
        HttpEntity<Map> httpEntity = new HttpEntity<>(reqBody,headers);
        ResponseEntity<String> response= restTemplate.postForEntity(url,httpEntity, String.class);
        String body1 = response.getBody();
        logger.info("vinu email response  ----------- "+body1.replace("\"",""));
    }









 db.forward_order_status.aggregate([{$lookup:{from:'warranty_claim_reverse_order', localField:'claimId', foreignField:'claimId', as: 'reversedetails'}}]);